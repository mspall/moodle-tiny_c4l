{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny C4L UI.\n *\n * @module      tiny_c4l/ui\n * @copyright   2022 Marc Catal√† <reskit@gmail.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {component} from './common';\nimport C4LModal from './modal';\nimport ModalFactory from 'core/modal_factory';\nimport {components as Components} from './components';\nimport {\n    get_string as getString,\n    get_strings as getStrings\n} from 'core/str';\nimport {showPreview} from './options';\nimport ModalEvents from 'core/modal_events';\n\nlet previewC4L = true;\n\n/**\n * Handle action\n * @param {TinyMCE} editor\n */\nexport const handleAction = (editor) => {\n    previewC4L = showPreview(editor);\n    displayDialogue(editor);\n};\n\nconst displayDialogue = async(editor) => {\n    const data = Object.assign({}, {});\n\n    // Show modal with buttons.\n    const modal = await ModalFactory.create({\n        type: C4LModal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n        large: true,\n    });\n\n    // Disable scroll on preview.\n    if (previewC4L) {\n        editor.targetElm.closest('body').classList.add('c4l-modal-open');\n        modal.setScrollable(false);\n    }\n    modal.show();\n\n    // Event listeners.\n    modal.getRoot()[0].addEventListener('click', (event) => {\n        handleModalClick(event, editor, modal);\n    });\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        handleModalHidden(editor);\n    });\n    if (previewC4L) {\n        modal.getRoot()[0].addEventListener('mouseover', (event) => {\n            handleModalMouseEvent(event, modal, true);\n        });\n        modal.getRoot()[0].addEventListener('mouseout', (event) => {\n            handleModalMouseEvent(event, modal, false);\n        });\n    }\n};\n\n/**\n * Handle when closing the Modal.\n *\n * @param {obj} editor\n */\nconst handleModalHidden = (editor) => {\n    editor.targetElm.closest('body').classList.remove('c4l-modal-open');\n};\n\n/**\n * Handle a click within the Modal.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} editor\n * @param {obj} modal\n */\nconst handleModalClick = (event, editor, modal) => {\n    const button = event.target.closest('button');\n\n    if (button) {\n        const sel = editor.selection.getContent();\n        const selectedButton = button.dataset.id;\n\n        if (Components?.[selectedButton]) {\n            let componentCode = Components[selectedButton].code;\n            const placeholder = (sel.length > 0 ? sel : Components[selectedButton].text);\n\n            // Create a new node to replace the placeholder.\n            const timestamp = new Date().getTime();\n            const randomId = Math.round(Math.random() * 100000) + '-' + timestamp;\n            const newNode = document.createElement('span');\n            newNode.dataset.id = randomId;\n            newNode.innerHTML = placeholder;\n            componentCode = componentCode.replace('{{PLACEHOLDER}}', newNode.outerHTML);\n\n            // Sets new content.\n            editor.selection.setContent(componentCode);\n\n            // Select text.\n            const nodeSel = editor.dom.select('span[data-id=\"' + randomId + '\"]');\n            if (nodeSel?.[0]) {\n                editor.selection.select(nodeSel[0]);\n            }\n\n            editor.focus();\n        }\n\n        modal.destroy();\n    }\n};\n\n/**\n * Handle a mouse event within the Modal.\n *\n * @param {MouseEvent} event The click event\n * @param {obj} modal\n * @param {bool} show\n */\nconst handleModalMouseEvent = (event, modal, show) => {\n    const isPreview = event.target.classList.contains('c4l-dialog-button');\n    const button = event.target.closest('button');\n    const noSelectionText = document.getElementById('no-selected-text');\n\n    if (isPreview && button) {\n        const selectedButton = button.dataset.id;\n        const node = modal.getRoot()[0].querySelector('div[data-id=\"code-preview-' + selectedButton + '\"]');\n        noSelectionText.classList.remove('no-selected-visible');\n        noSelectionText.classList.add('no-selected-hidden');\n        if (node) {\n            if (show) {\n                node.parentElement.classList.remove('c4l-hidden');\n                node.parentElement.classList.add('c4l-visible');\n                node.classList.remove('c4l-hidden');\n                node.classList.add('c4l-visible');\n            } else {\n                node.parentElement.classList.remove('c4l-visible');\n                node.parentElement.classList.add('c4l-hidden');\n                node.classList.remove('c4l-visible');\n                node.classList.add('c4l-hidden');\n            }\n        }\n    } else {\n        noSelectionText.classList.remove('no-selected-hidden');\n        noSelectionText.classList.add('no-selected-visible');\n        // eslint-disable-next-line no-console\n        console.log(noSelectionText);\n    }\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} data\n */\nconst getTemplateContext = async (editor, data) => {\n    return Object.assign({}, {\n        elementid: editor.id,\n        buttons: await getButtons(editor),\n        preview: previewC4L,\n        textpreview: await getString('preview', component),\n    }, data);\n};\n\n/**\n * Get the C4L buttons for the dialogue.\n *\n * @param {Editor} editor\n * @returns {object} data\n */\nconst getButtons = async(editor) => {\n    const buttons = [];\n    const strings = await getAllStrings();\n    const sel = editor.selection.getContent();\n    let componentCode = '';\n    let placeholder = '';\n    let previewCode = '';\n\n    // Iterate over components.\n    Components.map((component, index) => {\n        if (previewC4L) {\n            placeholder = (sel.length > 0 ? sel : component.text);\n            componentCode = component.code;\n            componentCode = componentCode.replace('{{PLACEHOLDER}}', placeholder);\n            previewCode = component.previewCode;\n        }\n\n        buttons.push({\n            id: index,\n            name: strings.get(component.name),\n            imageClass: component.imageClass,\n            htmlcode: componentCode,\n            previewCode\n        });\n    });\n\n    return buttons;\n};\n\n/**\n * Get language strings.\n *\n * @return {object} Language strings\n */\nconst getAllStrings = async() => {\n    const keys = [];\n\n    Components.map((element) => {\n        keys.push(element.name);\n    });\n\n    const stringValues = await getStrings(keys.map((key) => ({key, component})));\n    return new Map(keys.map((key, index) => ([key, stringValues[index]])));\n};\n"],"names":["previewC4L","editor","displayDialogue","data","Object","assign","ModalFactory","C4LModal","TYPE","getTemplateContext","type","templateContext","large","create","modal","targetElm","closest","classList","add","setScrollable","show","getRoot","addEventListener","event","handleModalClick","on","ModalEvents","hidden","handleModalHidden","handleModalMouseEvent","remove","button","target","sel","selection","getContent","selectedButton","dataset","id","Components","componentCode","code","placeholder","length","text","timestamp","Date","getTime","randomId","Math","round","random","newNode","document","createElement","innerHTML","replace","outerHTML","setContent","nodeSel","dom","select","focus","destroy","isPreview","contains","noSelectionText","getElementById","node","querySelector","parentElement","console","log","getButtons","component","elementid","buttons","preview","textpreview","getAllStrings","strings","previewCode","map","index","push","name","get","imageClass","htmlcode","keys","element","key","stringValues","Map"],"mappings":"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"}